import 'application'record { Record }
import 'application'repository'record { RecordRepository }
import 'database { Database, Value }
import 'database'utility

tableName = \() string { "record" }

fieldNames = \() [string] { [string "metric_id", "commit_hash", "time"] }

New = \(d Database) RecordRepository {
  RecordRepository{
    Create: \(rd Record) none | error {
      database'Create(
        d,
        tableName(),
        {string: Value
          "metric_id": rd.MetricId,
          "commit_hash": rd.CommitHash,
          "time": rd.Time,
        },
      )
    },
    FindMany: \(metricId string) [Record] | error {
      buildRecords(
        database'FindMany(
          d,
          tableName(),
          fieldNames(),
          {string: Value "metric_id": metricId},
        )?,
      )
    },
  }
}

buildRecords = \(xs [{string: Value}]) [Record] | error {
  if [x, ...xs] = xs {
    r = buildRecord(x())?
    rs = buildRecords(xs)?

    [Record r, ...rs]
  } else {
    [Record]
  }
}

buildRecord = \(x {string: Value}) Record | error {
  Record{
    MetricId: utility'String(utility'Column(x, "metric_id")?)?,
    CommitHash: utility'String(utility'Column(x, "commit_hash")?)?,
    Time: utility'Number(utility'Column(x, "time")?)?,
  }
}
